
@article{orviz_fernandez_eosc-synergy_2020,
	title = {{EOSC}-synergy: A set of Common Service Quality Assurance Baseline Criteria for Research Projects},
	rights = {{openAccess}, Creative Commons},
	url = {https://digital.csic.es/handle/10261/214441},
	doi = {10.20350/DIGITALCSIC/12533},
	shorttitle = {{EOSC}-synergy},
	abstract = {The purpose of this document is to dene a set of quality standards, procedures and best practices to conform a Service Quality Assurance plan to serve as a reference within the European research ecosystem related projects for the adequate development, deployment, operation and integration of services into production research infrastructures.},
	author = {Orviz Fernández, Pablo and David, Mario and Gomes, Jorge and {Joao Pina} and Bernardo, Samuel and Campos Plasencia, Isabel and Moltó, Germán and Caballer, Miguel},
	editora = {{Digital.CSIC} and {Digital.CSIC}},
	editoratype = {collaborator},
	urldate = {2022-02-10},
	date = {2020-06-15},
	langid = {english},
}

@article{shepherdson_cessda_2019,
	title = {{CESSDA} Software Maturity Levels},
	url = {https://zenodo.org/record/2614050},
	doi = {10.5281/zenodo.2614050},
	abstract = {This document is based on an extract from {CESSDA} Technical Architecture v1.0, May 2016. It was created so that readers interested in {CESSDA}’s Software Maturity Levels ({SMLs}) can find out more, without having to browse through the entire Technical Architecture document. Usability is not only a political imperative of European Research Infrastructure Consortiums’ need to maximise their return on investment, but is also essential for growth with limited funds and ongoing interoperability. Mandating and checking the sustainability/usability of the software components of {CESSDA}’s technical Research Infrastructure is essential if it is to strengthen and grow, however there are always risks attached, for example: how much effort is required to integrate it into the current technical framework, how will it be maintained, does it conform to the standards required? Therefore the need to measure the maturity of software designed for use by {CESSDA} is essential to ensure the quality of the technical Research Infrastructure is maintained.},
	author = {Shepherdson, John},
	urldate = {2022-02-10},
	date = {2019-03-29},
	keywords = {Quality, Software},
}

@article{orviz_set_2017,
	title = {A set of common software quality assurance baseline criteria for research projects},
	rights = {{openAccess}},
	url = {https://digital.csic.es/handle/10261/160086},
	doi = {10.20350/DIGITALCSIC/12543},
	abstract = {The purpose of this document is to define a set of quality standards, procedures and best practices to conform a Software Quality Assurance plan to serve as a reference within the European research ecosystem related projects for the adequate development and timely delivery of software products.},
	author = {Orviz, Pablo and López García, Álvaro and Duma, Doina Cristina and Donvito, Giacinto and David, Mario and Gomes, Jorge},
	editora = {{Digital.CSIC} and {Digital.CSIC}},
	editoratype = {collaborator},
	urldate = {2022-02-10},
	date = {2017},
	langid = {english},
}

@book{directorate-general_for_research_and_innovation________________________________________european_commission_scholarly_2020,
	location = {{LU}},
	title = {Scholarly infrastructures for research software: report from the {EOSC} Executive Board Working Group ({WG}) Architecture Task Force ({TF}) {SIRS}},
	isbn = {978-92-76-25568-0},
	url = {https://data.europa.eu/doi/10.2777/28598},
	shorttitle = {Scholarly infrastructures for research software},
	abstract = {The Task Force on Scholarly Infrastructures of Research Software, as part of the Architecture {WG} of the European Open Science Cloud ({EOSC}) Executive Board, has established a set of recommendations to allow {EOSC} to include software, next to other research outputs like publications and data, in the realm of its research artifacts. This work is built upon a survey and documentation of a representative panel of current operational infrastructures across Europe, comparing their scopes and approaches. This report summarises the state of the art, identifies best practices, as well as open problems, and paves the way for federating the different approaches in view of supporting the software pillar of {EOSC}.},
	publisher = {Publications Office of the European Union},
	author = {{Directorate-General for Research and Innovation
                
                        (European Commission)}},
	urldate = {2022-01-28},
	date = {2020},
}

@report{gruenpeter_defining_2021,
	title = {Defining Research Software: a controversial discussion},
	url = {https://zenodo.org/record/5504016},
	shorttitle = {Defining Research Software},
	abstract = {Software is essential in modern research; it plays vital roles at multiple stages of the research lifecycle. The term Research Software is widely used in the academic community but, what do we mean when we use these terms? Software and research? When you think of software, you may think of a digital object that is executed on a machine. Yet software is more than just this, it is a complex and evolving artifact. It may be a concept or a project designed to solve a puzzle by a team or a community that develops its functionalities and algorithms, which might not be digital objects. Furthermore, the software artifacts are digital objects, e.g., executables and source code files for different environments. These digital artifacts, which are used in a scholarly setting, might be important in the research process, but should all these be considered Research Software? This report is the result of a discussion examining the scope of the community definition of the {FAIR} principles for Research Software as part of the work in the {FAIR} for Research Software working group ({FAIR}4RS). We aim to clarify the scope of the {FAIR} principles by identifying which software artifacts the {FAIR} principles should apply to. This discussion portrayed a complex landscape of software uses in research and existing definitions that can help to better understand the complexity of different types of software in academia. Finally we determine the scope of the {FAIR}4RS with a short and concise definition of Research Software as a separate metaphor of software in research.},
	institution = {Zenodo},
	author = {Gruenpeter, Morane and Katz, Daniel S. and Lamprecht, Anna-Lena and Honeyman, Tom and Garijo, Daniel and Struck, Alexander and Niehues, Anna and Martinez, Paula Andrea and Castro, Leyla Jael and Rabemanantsoa, Tovo and Chue Hong, Neil P. and Martinez-Ortiz, Carlos and Sesink, Laurents and Liffers, Matthias and Fouilloux, Anne Claire and Erdmann, Chris and Peroni, Silvio and Martinez Lavanchy, Paula and Todorov, Ilian and Sinha, Manodeep},
	urldate = {2022-01-28},
	date = {2021-09-13},
	doi = {10.5281/zenodo.5504016},
	keywords = {academic software, definition, {FAIR} principles, research software, scientific software, software source code},
}

@article{childers_artifact_2016,
	title = {Artifact Evaluation for Publications (Dagstuhl Perspectives Workshop 15452)},
	volume = {5},
	issn = {2192-5283},
	url = {http://drops.dagstuhl.de/opus/volltexte/2016/5762},
	doi = {10.4230/DagRep.5.11.29},
	pages = {29--35},
	number = {11},
	journaltitle = {Dagstuhl Reports},
	author = {Childers, Bruce R. and Fursin, Grigori and Krishnamurthi, Shriram and Zeller, Andreas},
	editor = {Childers, Bruce R. and Fursin, Grigori and Krishnamurthi, Shriram and Zeller, Andreas},
	date = {2016},
}

@article{zhao_impact_2017,
	title = {Impact evaluation of open source software: an Altmetrics perspective},
	volume = {110},
	issn = {0138-9130, 1588-2861},
	url = {http://link.springer.com/10.1007/s11192-016-2204-y},
	doi = {10.1007/s11192-016-2204-y},
	shorttitle = {Impact evaluation of open source software},
	pages = {1017--1033},
	number = {2},
	journaltitle = {Scientometrics},
	shortjournal = {Scientometrics},
	author = {Zhao, Rongying and Wei, Mingkun},
	urldate = {2020-10-15},
	date = {2017-02},
	langid = {english},
}

@article{DARTS2017,
	title = {Hitting the Bull'S eye with darts: Artifact evaluation in computer science},
	url = {https://zenodo.org/record/583007},
	doi = {10.5281/ZENODO.583007},
	author = {Wagner, Michael},
	date = {2017},
	note = {Publisher: Zenodo
tex.copyright: Creative Commons Attribution 4.0},
	keywords = {artifact evaluation, dagstuhl, reproducibility, research artifact, research data, research data management, research evaluation},
}

@online{AboutPap55:online,
	title = {Papers With Code},
	url = {https://paperswithcode.com/about},
	abstract = {The mission of Papers with Code is to create a free and open resource with Machine Learning papers, code and evaluation tables.

We believe this is best done together with the community, supported by {NLP} and {ML}.

All content on this website is openly licenced under {CC}-{BY}-{SA} (same as Wikipedia) and everyone can contribute - look for the "Edit" buttons!},
	author = {Stojnic, Robert and Taylor, Ross and Karadas, Marcin and Kerkez, Victor and Viaud, Ludovic},
	date = {2019},
}

@article{krishnamurthi_artifact_2011,
	title = {Artifact evaluation for software conferences},
	url = {https://www.artifact-eval.org/},
	author = {Krishnamurthi, Shriram},
	date = {2011},
}

@article{Katz2016,
	title = {Software vs. data in the context of citation},
	url = {https://doi.org/10.7287/peerj.preprints.2630v1},
	doi = {10.7287/peerj.preprints.2630v1},
	author = {Katz, Daniel S and Niemeyer, Kyle E and Smith, Arfon M and Anderson, William L and Boettiger, Carl and Hinsen, Konrad and Hooft, Rob and Hucka, Michael and Lee, Allen and Löffler, Frank and Pollard, Tom and Rios, Fernando},
	date = {2016-12},
	note = {Publisher: {PeerJ}},
}

@article{hinsen_software_2013,
	title = {Software Development for Reproducible Research},
	volume = {15},
	url = {https://doi.org/10.1109/MCSE.2013.91},
	doi = {10.1109/MCSE.2013.91},
	pages = {60--63},
	number = {4},
	journaltitle = {Computing in Science and Engineering},
	author = {Hinsen, Konrad},
	date = {2013},
}

@online{GoodPrac52:online,
	title = {Good practice principles for scholarly communication services},
	url = {https://www.coar-repositories.org/news-updates/good-practice-principles-for-scholarly-communication-services-2/},
	author = {{COAR} and {SPARC}},
	urldate = {2020-06-10},
	date = {2019-01},
}

@report{clement-fontaine_encouraging_2019,
	title = {Encouraging a wider usage of software derived from research},
	url = {https://hal.archives-ouvertes.fr/hal-02545142},
	institution = {Committee for Open Science's Free Software and Open Source Project Group},
	type = {Research report},
	author = {Clément-Fontaine, Mélanie and Di Cosmo, Roberto and Guerry, Bastien and Moreau, Patrick and Pellegrini, François},
	date = {2019-11},
	note = {tex.hal\_id: hal-02545142
tex.hal\_version: v1
tex.pdf: https://hal.archives-ouvertes.fr/hal-02545142/file/Opportunity\%20Noteₛoftware\%20derived\%20from\%20research$_{\textrm{E}}$N\%20pm.pdf},
}

@article{boettiger_introduction_2015,
	title = {An introduction to Docker for reproducible research},
	volume = {49},
	issn = {0163-5980},
	url = {https://dl.acm.org/doi/10.1145/2723872.2723882},
	doi = {10.1145/2723872.2723882},
	pages = {71--79},
	number = {1},
	journaltitle = {{ACM} {SIGOPS} Operating Systems Review},
	shortjournal = {{SIGOPS} Oper. Syst. Rev.},
	author = {Boettiger, Carl},
	urldate = {2020-09-25},
	date = {2015-01-20},
	langid = {english},
}

@article{plesser_reproducibility_2018,
	title = {Reproducibility vs. Replicability: A Brief History of a Confused Terminology},
	volume = {11},
	issn = {1662-5196},
	url = {http://journal.frontiersin.org/article/10.3389/fninf.2017.00076/full},
	doi = {10.3389/fninf.2017.00076},
	shorttitle = {Reproducibility vs. Replicability},
	pages = {76},
	journaltitle = {Frontiers in Neuroinformatics},
	shortjournal = {Front. Neuroinform.},
	author = {Plesser, Hans E.},
	urldate = {2022-03-02},
	date = {2018-01-18},
	file = {Texto completo:/home/david/Zotero/storage/SPSUP4H4/Plesser - 2018 - Reproducibility vs. Replicability A Brief History.pdf:application/pdf},
}

@inproceedings{srisopha_software_2018,
	location = {Gothenburg Sweden},
	title = {Software quality through the eyes of the end-user and static analysis tools: a study on Android {OSS} applications},
	isbn = {978-1-4503-5737-1},
	url = {https://dl.acm.org/doi/10.1145/3194095.3194096},
	doi = {10.1145/3194095.3194096},
	shorttitle = {Software quality through the eyes of the end-user and static analysis tools},
	eventtitle = {{ICSE} '18: 40th International Conference on Software Engineering},
	pages = {1--4},
	booktitle = {Proceedings of the 1st International Workshop on Software Qualities and Their Dependencies},
	publisher = {{ACM}},
	author = {Srisopha, Kamonphop and Alfayez, Reem},
	urldate = {2022-06-24},
	date = {2018-05-28},
	langid = {english},
	file = {Full Text:/home/david/Zotero/storage/HYWU86MC/Srisopha and Alfayez - 2018 - Software quality through the eyes of the end-user .pdf:application/pdf},
}

@inproceedings{brandtner_fostering_2013,
	location = {San Francisco, {CA}, {USA}},
	title = {Fostering software quality assessment},
	isbn = {978-1-4673-3076-3 978-1-4673-3073-2},
	url = {http://ieeexplore.ieee.org/document/6606725/},
	doi = {10.1109/ICSE.2013.6606725},
	eventtitle = {2013 35th International Conference on Software Engineering ({ICSE})},
	pages = {1393--1396},
	booktitle = {2013 35th International Conference on Software Engineering ({ICSE})},
	publisher = {{IEEE}},
	author = {Brandtner, Martin},
	urldate = {2022-06-24},
	date = {2013-05},
	file = {Accepted Version:/home/david/Zotero/storage/CF7USS5W/Brandtner - 2013 - Fostering software quality assessment.pdf:application/pdf},
}

@article{montagud_systematic_2012,
	title = {A systematic review of quality attributes and measures for software product lines},
	volume = {20},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-011-9146-7},
	doi = {10.1007/s11219-011-9146-7},
	pages = {425--486},
	number = {3},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Montagud, Sonia and Abrahão, Silvia and Insfran, Emilio},
	urldate = {2022-06-24},
	date = {2012-09},
	langid = {english},
	file = {Full Text:/home/david/Zotero/storage/PG9KXL2J/Montagud et al. - 2012 - A systematic review of quality attributes and meas.pdf:application/pdf},
}

@article{baggen_standardized_2012,
	title = {Standardized code quality benchmarking for improving software maintainability},
	volume = {20},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-011-9144-9},
	doi = {10.1007/s11219-011-9144-9},
	pages = {287--307},
	number = {2},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Baggen, Robert and Correia, José Pedro and Schill, Katrin and Visser, Joost},
	urldate = {2022-06-24},
	date = {2012-06},
	langid = {english},
}

@article{trienekens_quality_2010,
	title = {Quality specification and metrication, results from a case-study in a mission-critical software domain},
	volume = {18},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-010-9101-z},
	doi = {10.1007/s11219-010-9101-z},
	pages = {469--490},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Trienekens, Jos J. M. and Kusters, Rob J. and Brussel, Dennis C.},
	urldate = {2022-06-24},
	date = {2010-12},
	langid = {english},
	file = {Full Text:/home/david/Zotero/storage/XGM488V2/Trienekens et al. - 2010 - Quality specification and metrication, results fro.pdf:application/pdf},
}

@inproceedings{deissenboeck_software_2009,
	location = {Vancouver, {BC}},
	title = {Software quality models: Purposes, usage scenarios and requirements},
	isbn = {978-1-4244-3723-8},
	url = {http://ieeexplore.ieee.org/document/5071551/},
	doi = {10.1109/WOSQ.2009.5071551},
	shorttitle = {Software quality models},
	eventtitle = {2009 {ICSE} Workshop on Software Quality ({WoSQ} 2009)},
	pages = {9--14},
	booktitle = {2009 {ICSE} Workshop on Software Quality},
	publisher = {{IEEE}},
	author = {Deissenboeck, F. and Juergens, E. and Lochmann, K. and Wagner, S.},
	urldate = {2022-06-24},
	date = {2009-05},
	file = {Full Text:/home/david/Zotero/storage/58QKX3BB/Deissenboeck et al. - 2009 - Software quality models Purposes, usage scenarios.pdf:application/pdf},
}

@inproceedings{bakota_continuous_2008,
	location = {Leipzig, Germany},
	title = {Continuous software quality supervision using {SourceInventory} and Columbus},
	isbn = {978-1-60558-079-1},
	url = {http://portal.acm.org/citation.cfm?doid=1370175.1370193},
	doi = {10.1145/1370175.1370193},
	eventtitle = {Companion of the 13th international conference},
	pages = {931},
	booktitle = {Companion of the 13th international conference on Software engineering  - {ICSE} Companion '08},
	publisher = {{ACM} Press},
	author = {Bakota, Tibor and Beszédes, Árpád and Ferenć, Rudolf and Gyimóthy, Tibor},
	urldate = {2022-06-24},
	date = {2008},
	langid = {english},
}

@inproceedings{plosch_emisq_2007,
	location = {Columbia, {MD}},
	title = {The {EMISQ} Method - Expert Based Evaluation of Internal Software Quality},
	isbn = {978-0-7695-2862-5},
	url = {https://ieeexplore.ieee.org/document/4402769/},
	doi = {10.1109/SEW.2007.71},
	eventtitle = {2007 31st {IEEE} Software Engineering Workshop},
	pages = {99--108},
	booktitle = {31st {IEEE} Software Engineering Workshop ({SEW} 2007)},
	publisher = {{IEEE}},
	author = {Plosch, R. and Gruber, H. and Hentschel, A. and Korner, Ch. and Pomberger, G. and Schiffer, S. and Saft, M. and Storck, S.},
	urldate = {2022-06-24},
	date = {2007-03},
}

@article{cote_search_2007,
	title = {In search for a widely applicable and accepted software quality model for software quality engineering},
	volume = {15},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-007-9029-0},
	doi = {10.1007/s11219-007-9029-0},
	pages = {401--416},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Côté, Marc-Alexis and Suryn, Witold and Georgiadou, Elli},
	urldate = {2022-06-24},
	date = {2007-11-14},
	langid = {english},
	file = {Accepted Version:/home/david/Zotero/storage/VTEWKTU3/Côté et al. - 2007 - In search for a widely applicable and accepted sof.pdf:application/pdf},
}

@article{aberdour_achieving_2007,
	title = {Achieving Quality in Open-Source Software},
	volume = {24},
	issn = {0740-7459},
	url = {http://ieeexplore.ieee.org/document/4052554/},
	doi = {10.1109/MS.2007.2},
	pages = {58--64},
	number = {1},
	journaltitle = {{IEEE} Software},
	shortjournal = {{IEEE} Softw.},
	author = {Aberdour, Mark},
	urldate = {2022-06-24},
	date = {2007-01},
}

@article{crispin_driving_2006,
	title = {Driving Software Quality: How Test-Driven Development Impacts Software Quality},
	volume = {23},
	issn = {0740-7459},
	url = {http://ieeexplore.ieee.org/document/4012627/},
	doi = {10.1109/MS.2006.157},
	shorttitle = {Driving Software Quality},
	pages = {70--71},
	number = {6},
	journaltitle = {{IEEE} Software},
	shortjournal = {{IEEE} Softw.},
	author = {Crispin, Lisa},
	urldate = {2022-06-24},
	date = {2006-11},
}

@incollection{estdale_applying_2018,
	title = {Applying the {ISO}/{IEC} 25010 Quality Models to Software Product: 25th European Conference, {EuroSPI} 2018, Bilbao, Spain, September 5-7, 2018, Proceedings},
	isbn = {978-3-319-97924-3},
	shorttitle = {Applying the {ISO}/{IEC} 25010 Quality Models to Software Product},
	abstract = {Abstract. The software development process focuses on the delivery of a software implementation –its ‘product’, whether {COTS} or bespoke. However, potential acquirers are attracted by the promise of a future ‘service’from that product: those aspects of the software’s behavior visible outside it, particularly those that deliver value in the real world.{ISO}/{IEC} 25010: 2011 provides the leading models for assessing software product. This is an important contribution towards establishing the delivery performance of software processes and proposed improvements.This paper ex-plores the scope and interpretation of the {ISO}/{IEC} 25010 quality models, in the light of this broad, lifetime service-oriented view, also identifying other significant aspects of product that concern acquirers of software, and for which quality requirements and quality evaluation are potentially needed. Suggestions for refinement and extension of the standard complete the paper.},
	pages = {492--503},
	author = {Estdale, John and Georgiadou, Elli},
	date = {2018-01-01},
	doi = {10.1007/978-3-319-97925-0_42},
	file = {Full Text PDF:/home/david/Zotero/storage/IQC7TVNA/Estdale and Georgiadou - 2018 - Applying the ISOIEC 25010 Quality Models to Softw.pdf:application/pdf},
}

@online{1400-1700_isoiec_nodate,
	title = {{ISO}/{IEC} 25010:2011},
	url = {https://www.iso.org/cms/render/live/en/sites/isoorg/contents/data/standard/03/57/35733.html},
	shorttitle = {{ISO}/{IEC} 25010},
	abstract = {Systems and software engineering — Systems and software Quality Requirements and Evaluation ({SQuaRE}) — System and software quality models},
	titleaddon = {{ISO}},
	author = {{14:00-17:00}},
	urldate = {2022-06-24},
	langid = {english},
	file = {Snapshot:/home/david/Zotero/storage/XBFNN8QN/35733.html:text/html},
}

@inproceedings{zuser_software_2005,
	location = {St. Louis, Missouri},
	title = {Software quality development and assurance in {RUP}, {MSF} and {XP}: a comparative study},
	isbn = {978-1-59593-122-1},
	url = {http://dl.acm.org/citation.cfm?doid=1083292.1083300},
	doi = {10.1145/1083292.1083300},
	shorttitle = {Software quality development and assurance in {RUP}, {MSF} and {XP}},
	eventtitle = {the third workshop},
	pages = {1},
	booktitle = {Proceedings of the third workshop on Software quality - 3-{WoSQ}},
	publisher = {{ACM} Press},
	author = {Zuser, Wolfgang and Heil, Stefan and Grechenig, Thomas},
	urldate = {2022-06-24},
	date = {2005},
	langid = {english},
}

@inproceedings{nagappan_early_2005,
	location = {St. Louis, Missouri},
	title = {Early estimation of software quality using in-process testing metrics: a controlled case study},
	isbn = {978-1-59593-122-1},
	url = {http://dl.acm.org/citation.cfm?doid=1083292.1083304},
	doi = {10.1145/1083292.1083304},
	shorttitle = {Early estimation of software quality using in-process testing metrics},
	eventtitle = {the third workshop},
	pages = {1},
	booktitle = {Proceedings of the third workshop on Software quality - 3-{WoSQ}},
	publisher = {{ACM} Press},
	author = {Nagappan, Nachiappan and Williams, Laurie and Vouk, Mladen and Osborne, Jason},
	urldate = {2022-06-24},
	date = {2005},
	langid = {english},
}

@article{ct_evolution_2005,
	title = {The Evolution Path for Industrial Software Quality Evaluation Methods Applying {ISO}/{IEC} 9126:2001 Quality Model: Example of {MITRE}?s {SQAE} Method},
	volume = {13},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/s11219-004-5259-6},
	doi = {10.1007/s11219-004-5259-6},
	shorttitle = {The Evolution Path for Industrial Software Quality Evaluation Methods Applying {ISO}/{IEC} 9126},
	pages = {17--30},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {C�t�, Marc-Alexis and Suryn, Witold and Laporte, Claude Y. and Martin, Robert A.},
	urldate = {2022-06-24},
	date = {2005-03},
	langid = {english},
	file = {Submitted Version:/home/david/Zotero/storage/37JJQKAX/C�t� et al. - 2005 - The Evolution Path for Industrial Software Quality.pdf:application/pdf},
}

@article{ho-won_jung_measuring_2004,
	title = {Measuring Software Product Quality: A Survey of {ISO}/{IEC} 9126},
	volume = {21},
	issn = {0740-7459},
	url = {http://ieeexplore.ieee.org/document/1331309/},
	doi = {10.1109/MS.2004.1331309},
	shorttitle = {Measuring Software Product Quality},
	pages = {88--92},
	number = {5},
	journaltitle = {{IEEE} Software},
	shortjournal = {{IEEE} Softw.},
	author = {{Ho-Won Jung} and {Seung-Gweon Kim} and {Chang-Shin Chung}},
	urldate = {2022-06-24},
	date = {2004-09},
	langid = {english},
}

@article{ortega_construction_2003,
	title = {Construction of a systemic quality model for evaluating a software product},
	volume = {11},
	issn = {09639314},
	url = {http://link.springer.com/10.1023/A:1025166710988},
	doi = {10.1023/A:1025166710988},
	pages = {219--242},
	number = {3},
	journaltitle = {Software Quality Journal},
	author = {Ortega, Maryoly and Pérez, {MarÍa} and Rojas, Teresita},
	urldate = {2022-06-24},
	date = {2003},
}

@article{blin_multi-criteria_2001,
	title = {Multi-Criteria Methodology Contribution to the Software Quality Evaluation},
	volume = {9},
	issn = {09639314},
	url = {http://link.springer.com/10.1023/A:1016626919680},
	doi = {10.1023/A:1016626919680},
	pages = {113--132},
	number = {2},
	journaltitle = {Software Quality Journal},
	author = {Blin, Marie-José and Tsoukiàs, Alexis},
	urldate = {2022-06-24},
	date = {2001},
	file = {Submitted Version:/home/david/Zotero/storage/IUKUQM7V/Blin and Tsoukiàs - 2001 - [No title found].pdf:application/pdf},
}

@inproceedings{tanaka_software_1998,
	location = {Kyoto, Japan},
	title = {Software quality analysis and measurement service activity in the company},
	isbn = {978-0-8186-8368-8},
	url = {http://ieeexplore.ieee.org/document/671598/},
	doi = {10.1109/ICSE.1998.671598},
	eventtitle = {20th International Conference on Software Engineering},
	pages = {426--429},
	booktitle = {Proceedings of the 20th International Conference on Software Engineering},
	publisher = {{IEEE} Comput. Soc},
	author = {Tanaka, T. and Aizawa, M. and Ogasawara, H. and Yamada, A.},
	urldate = {2022-06-24},
	date = {1998},
}

@article{stelzer_critical_1997,
	title = {A critical look at {ISO} 9000 for software quality management},
	volume = {6},
	issn = {09639314},
	url = {http://link.springer.com/10.1023/A:1018591430752},
	doi = {10.1023/A:1018591430752},
	pages = {65--79},
	number = {2},
	journaltitle = {Software Quality Control},
	author = {Stelzer, Dirk and Mellis, Werner and Herzwurm, Georg},
	urldate = {2022-06-24},
	date = {1997},
}

@article{van_zeist_specifying_1996,
	title = {Specifying software quality with the extended {ISO} model},
	volume = {5},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/BF00209185},
	doi = {10.1007/BF00209185},
	pages = {273--284},
	number = {4},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Van Zeist, R. H. J. and Hendriks, P. R. H.},
	urldate = {2022-06-24},
	date = {1996-12},
	langid = {english},
}

@article{hovenden_building_1996,
	title = {Building quality into scientific software},
	volume = {5},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/BF02420942},
	doi = {10.1007/BF02420942},
	pages = {25--32},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Hovenden, F. M. and Walker, S. D. and Sharp, H. C. and Woodman, M.},
	urldate = {2022-06-24},
	date = {1996-03},
	langid = {english},
}

@article{kitchenham_software_1996,
	title = {Software quality: the elusive target [special issues section]},
	volume = {13},
	issn = {07407459},
	url = {http://ieeexplore.ieee.org/document/476281/},
	doi = {10.1109/52.476281},
	shorttitle = {Software quality},
	pages = {12--21},
	number = {1},
	journaltitle = {{IEEE} Software},
	shortjournal = {{IEEE} Softw.},
	author = {Kitchenham, B. and Pfleeger, S.L.},
	urldate = {2022-06-24},
	date = {1996-01},
}

@article{schneidewind_controlling_1995,
	title = {Controlling and predicting the quality of space shuttle software using metrics},
	volume = {4},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/BF00404649},
	doi = {10.1007/BF00404649},
	pages = {49--68},
	number = {1},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Schneidewind, Norman F.},
	urldate = {2022-06-24},
	date = {1995-03},
	langid = {english},
}

@article{gillies_modelling_1992,
	title = {Modelling software quality in the commercial environment},
	volume = {1},
	issn = {0963-9314, 1573-1367},
	url = {http://link.springer.com/10.1007/BF01720924},
	doi = {10.1007/BF01720924},
	pages = {175--191},
	number = {3},
	journaltitle = {Software Quality Journal},
	shortjournal = {Software Qual J},
	author = {Gillies, Alan},
	urldate = {2022-06-24},
	date = {1992-09},
	langid = {english},
}

@incollection{international_conference_on_software_engineering_practice_1990,
	location = {Los Alamitos Brussels Tokyo [Paris]},
	title = {Practice of quality modeling and measurement on software life-cycle},
	isbn = {978-0-8186-2026-3},
	publisher = {{IEEE} Computer society press [diff. {AFCET}]},
	editor = {International conference on software engineering and Association for computing machinery and {IEEE} computer society and Association française pour la cybernétique économique et technique},
	date = {1990},
}

@article{galli_use_2021,
	title = {On the Use of Quality Models to Address Distinct Quality Views},
	volume = {4},
	issn = {2571-5577},
	url = {https://www.mdpi.com/2571-5577/4/3/41},
	doi = {10.3390/asi4030041},
	abstract = {Different software product quality models interpret different amounts of information, i.e., they can capture and address different manifestations of software quality. This characteristic can cause misleading statements and misunderstandings while explaining or comparing the results of software product quality assessments. A total of 23 previously identified distinct software product quality models are analysed on how they handle the abstract notion of quality, and a taxonomy on the quality manifestations that the individual software product quality models are able to capture is established. Quality models that are able to solely describe the quality manifestation of the source code are attractive due to their full automation potential through static code analysers, but their assessment results ignore a huge part of software product quality, which is the one that most impresses the end user. The manifestations of software product quality that address the behaviour of the software while it operates, or the perception of the end user with regard to the software in use, require human involvement in the quality assessment. The taxonomy contributes to interpreting the quality assessment results of different quality models by showing the possible quality manifestations that can be captured by the identified models; moreover, the taxonomy also provides assistance while selecting a quality model for a given project. The quality manifestations used for the quality measurement always need to be presented, otherwise the quality assessment results cannot be interpreted in an appropriate manner.},
	pages = {41},
	number = {3},
	journaltitle = {Applied System Innovation},
	shortjournal = {{ASI}},
	author = {Galli, Tamas and Chiclana, Francisco and Siewe, Francois},
	urldate = {2022-06-24},
	date = {2021-07-02},
	langid = {english},
	file = {Full Text:/home/david/Zotero/storage/EMNSMN27/Galli et al. - 2021 - On the Use of Quality Models to Address Distinct Q.pdf:application/pdf},
}

@article{wagner_software_nodate,
	title = {Software Quality Models in Practice Survey Results},
	pages = {24},
	author = {Wagner, Stefan and Lochmann, Klaus and Winter, Sebastian and Goeb, Andreas and Klaes, Michael and Nunnenmacher, Sabine},
	langid = {english},
	file = {Wagner et al. - Software Quality Models in Practice Survey Results.pdf:/home/david/Zotero/storage/LAXLCW8I/Wagner et al. - Software Quality Models in Practice Survey Results.pdf:application/pdf},
}

@report{schlauch_tobias_dlr_2018,
	title = {{DLR} Software Engineering Guidelines},
	rights = {Creative Commons Attribution 4.0 International, Open Access},
	url = {https://zenodo.org/record/1344611},
	abstract = {This document describes the software engineering guidelines of the German Aerospace Center ({DLR}). The target group of the guidelines are {DLR} scientists. The guidelines shall support them to find out the status of their developed software and to improve it with regard to good software development and documentation practice. The focus of the guidelines is on retaining knowledge and supporting sustainable software development in research. We publish these guidelines to support the general discussion about good software development practice in research.{\textless}br{\textgreater}},
	institution = {Zenodo},
	author = {Schlauch, Tobias and Meinel, Michael and Haupt, Carina},
	urldate = {2022-06-24},
	date = {2018-08-17},
	langid = {english},
	doi = {10.5281/ZENODO.1344611},
	note = {Version Number: 1.0.0},
	keywords = {guidelines, research-software-engineering},
}
